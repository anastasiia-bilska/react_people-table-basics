{"version":3,"sources":["components/Navigation/Navigation.tsx","App.tsx","components/Loader/Loader.tsx","api.ts","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","components/NotFoundPage/NotFoundPage.tsx","components/HomePage/HomePage.tsx","index.tsx"],"names":["Navigation","memo","className","role","isActive","cn","to","App","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","slug","sex","name","PeopleTable","people","selectedPersonSlug","map","born","died","mother","motherName","father","fatherName","PeoplePage","useState","setPeople","errorMessage","setErrorMessage","isTableLoading","setIsTableLoading","loadPeopleFromServer","peopleFromServer","preparedPeople","find","mom","dad","useEffect","useParams","length","NotFoundPage","HomePage","createRoot","document","getElementById","render","path","element","index","replace"],"mappings":"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","file":"static/js/main.40fcd60f.chunk.js","sourcesContent":["import { FC, memo } from 'react';\nimport cn from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport const Navigation:FC = memo(() => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={({ isActive }) => (\n              cn('navbar-item', {\n                'has-background-grey-lighter is-active': isActive,\n              })\n            )}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            className={({ isActive }) => (\n              cn('navbar-item', { 'has-background-grey-lighter': isActive })\n            )}\n            to=\"people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n});\n","import { Outlet } from 'react-router-dom';\n\nimport './App.scss';\nimport { Navigation } from './components/Navigation/Navigation';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navigation />\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Outlet />\n        </div>\n      </main>\n    </div>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { FC, memo } from 'react';\nimport cn from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ninterface Props {\n  person: Person,\n}\n\nexport const PersonLink:FC<Props> = memo(({ person }) => {\n  return (\n    <Link\n      to={`../${person.slug}`}\n      className={cn({\n        'has-text-danger': person.sex === 'f',\n      })}\n    >\n      {person.name}\n    </Link>\n  );\n});\n","import { FC, memo } from 'react';\nimport cn from 'classnames';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\ninterface Props {\n  people: Person[],\n  selectedPersonSlug: string,\n}\n\nexport const PeopleTable:FC<Props> = memo(({ people, selectedPersonSlug }) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      // eslint-disable-next-line max-len\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <tr\n            key={person.slug}\n            data-cy=\"person\"\n            className={cn({\n              'has-background-warning': selectedPersonSlug === person.slug,\n            })}\n          >\n            <td>\n              <PersonLink person={person} />\n            </td>\n\n            <td>{person.sex}</td>\n            <td>{person.born}</td>\n            <td>{person.died}</td>\n            <td>\n              {person.mother\n                ? <PersonLink person={person.mother} />\n                : (person.motherName || '-')}\n            </td>\n            <td>\n              {person.father\n                ? <PersonLink person={person.father} />\n                : (person.fatherName || '-')}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n});\n","import {\n  FC,\n  memo,\n  useEffect,\n  useState,\n} from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { Person } from '../../types';\nimport { Loader } from '../Loader';\nimport { getPeople } from '../../api';\nimport { PeopleTable } from '../PeopleTable/PeopleTable';\n\nexport const PeoplePage:FC = memo(() => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [isTableLoading, setIsTableLoading] = useState(false);\n  const loadPeopleFromServer = async () => {\n    try {\n      setIsTableLoading(true);\n\n      const peopleFromServer = await getPeople();\n      const preparedPeople = peopleFromServer.map(person => {\n        const mother = peopleFromServer.find(mom => (\n          person.motherName === mom.name\n        ));\n\n        const father = peopleFromServer.find(dad => (\n          person.fatherName === dad.name));\n\n        return {\n          ...person,\n          mother,\n          father,\n        };\n      });\n\n      setPeople(preparedPeople);\n\n      return preparedPeople;\n    } catch (loadingError) {\n      setErrorMessage('Something went wrong');\n\n      return loadingError;\n    } finally {\n      setIsTableLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadPeopleFromServer();\n  }, []);\n\n  const { slug = '' } = useParams();\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isTableLoading && <Loader />}\n\n          {errorMessage && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {people.length === 0 && !isTableLoading && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {people.length > 0 && (\n            <PeopleTable people={people} selectedPersonSlug={slug} />\n          )}\n        </div>\n      </div>\n    </>\n  );\n});\n","import { FC, memo } from 'react';\n\nexport const NotFoundPage:FC = memo(() => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n});\n","import { FC, memo } from 'react';\n\nexport const HomePage:FC = memo(() => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n});\n","import { createRoot } from 'react-dom/client';\nimport {\n  HashRouter as Router, Navigate, Route, Routes,\n} from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\nimport { NotFoundPage } from './components/NotFoundPage/NotFoundPage';\nimport { HomePage } from './components/HomePage/HomePage';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route path=\"*\" element={<NotFoundPage />} />\n          <Route index element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n        </Route>\n      </Routes>\n    </Router>,\n  );\n"],"sourceRoot":""}