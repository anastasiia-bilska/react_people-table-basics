{"version":3,"sources":["components/HomePage/HomePage.tsx","components/Loader/Loader.tsx","api.ts","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","App.tsx","index.tsx"],"names":["HomePage","memo","className","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","to","slug","cn","sex","name","PeopleTable","people","selectedPersonSlug","map","born","died","mother","motherName","father","fatherName","PeoplePage","useState","setPeople","errorMessage","setErrorMessage","isTableLoading","setIsTableLoading","loadPeopleFromServer","peopleFromServer","preparedPeople","find","p","useEffect","useParams","length","App","role","isActive","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.7374877f.chunk.js","sourcesContent":["import { FC, memo } from 'react';\n\nexport const HomePage:FC = memo(() => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n});\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { FC, memo } from 'react';\nimport cn from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ninterface Props {\n  person: Person,\n}\n\nexport const PersonLink:FC<Props> = memo(({ person }) => {\n  return (\n    <Link\n      to={`/people/${person.slug}`}\n      className={cn({\n        'has-text-danger': person.sex === 'f',\n      })}\n    >\n      {person.name}\n    </Link>\n  );\n});\n","import { FC, memo } from 'react';\nimport cn from 'classnames';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\ninterface Props {\n  people: Person[],\n  selectedPersonSlug: string,\n}\n\nexport const PeopleTable:FC<Props> = memo(({ people, selectedPersonSlug }) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      // eslint-disable-next-line max-len\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <tr\n            key={person.slug}\n            data-cy=\"person\"\n            className={cn({\n              'has-background-warning': selectedPersonSlug === person.slug,\n            })}\n          >\n            <td>\n              <PersonLink person={person} />\n            </td>\n\n            <td>{person.sex}</td>\n            <td>{person.born}</td>\n            <td>{person.died}</td>\n            <td>\n              {person.mother\n                ? <PersonLink person={person.mother} />\n                : (person.motherName || '-')}\n            </td>\n            <td>\n              {person.father\n                ? <PersonLink person={person.father} />\n                : (person.fatherName || '-')}\n            </td>\n          </tr>\n        ))}\n        {/* <tr data-cy=\"person\">\n          <td>\n            <a href=\"#/people/jan-van-brussel-1714\">\n              Jan van Brussel\n            </a>\n          </td>\n\n          <td>m</td>\n          <td>1714</td>\n          <td>1748</td>\n          <td>Joanna van Rooten</td>\n          <td>Jacobus van Brussel</td>\n        </tr>\n\n        <tr data-cy=\"person\">\n          <td>\n            <a href=\"#/people/philibert-haverbeke-1907\">\n              Philibert Haverbeke\n            </a>\n          </td>\n\n          <td>m</td>\n          <td>1907</td>\n          <td>1997</td>\n\n          <td>\n            <a\n              className=\"has-text-danger\"\n              href=\"#/people/emma-de-milliano-1876\"\n            >\n              Emma de Milliano\n            </a>\n          </td>\n\n          <td>\n            <a href=\"#/people/emile-haverbeke-1877\">\n              Emile Haverbeke\n            </a>\n          </td>\n        </tr>\n\n        <tr data-cy=\"person\" className=\"has-background-warning\">\n          <td>\n            <a href=\"#/people/jan-frans-van-brussel-1761\">\n              Jan Frans van Brussel\n            </a>\n          </td>\n\n          <td>m</td>\n          <td>1761</td>\n          <td>1833</td>\n          <td>-</td>\n\n          <td>\n            <a href=\"#/people/jacobus-bernardus-van-brussel-1736\">\n              Jacobus Bernardus van Brussel\n            </a>\n          </td>\n        </tr>\n\n        <tr data-cy=\"person\">\n          <td>\n            <a\n              className=\"has-text-danger\"\n              href=\"#/people/lievijne-jans-1542\"\n            >\n              Lievijne Jans\n            </a>\n          </td>\n\n          <td>f</td>\n          <td>1542</td>\n          <td>1582</td>\n          <td>-</td>\n          <td>-</td>\n        </tr>\n\n        <tr data-cy=\"person\">\n          <td>\n            <a href=\"#/people/bernardus-de-causmaecker-1721\">\n              Bernardus de Causmaecker\n            </a>\n          </td>\n\n          <td>m</td>\n          <td>1721</td>\n          <td>1789</td>\n\n          <td>\n            <a\n              className=\"has-text-danger\"\n              href=\"#/people/livina-haverbeke-1692\"\n            >\n              Livina Haverbeke\n            </a>\n          </td>\n\n          <td>\n            <a href=\"#/people/lieven-de-causmaecker-1696\">\n              Lieven de Causmaecker\n            </a>\n          </td>\n        </tr> */}\n      </tbody>\n    </table>\n  );\n});\n","import {\n  FC,\n  memo,\n  useEffect,\n  useState,\n} from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { Person } from '../../types';\nimport { Loader } from '../Loader';\nimport { getPeople } from '../../api';\nimport { PeopleTable } from '../PeopleTable/PeopleTable';\n\nexport const PeoplePage:FC = memo(() => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [isTableLoading, setIsTableLoading] = useState(false);\n  const loadPeopleFromServer = async () => {\n    try {\n      setIsTableLoading(true);\n\n      const peopleFromServer = await getPeople();\n      const preparedPeople = peopleFromServer.map(person => {\n        const mother = peopleFromServer.find(p => person.motherName === p.name);\n        const father = peopleFromServer.find(p => person.fatherName === p.name);\n\n        return {\n          ...person,\n          mother,\n          father,\n        };\n      });\n\n      setPeople(preparedPeople);\n\n      return preparedPeople;\n    } catch (loadingError) {\n      setErrorMessage('Something went wrong');\n\n      return loadingError;\n    } finally {\n      setIsTableLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadPeopleFromServer();\n  }, []);\n\n  const { slug = '' } = useParams();\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isTableLoading && <Loader />}\n\n          {/* <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n            Something went wrong\n          </p> */}\n          {errorMessage && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {people.length === 0 && !isTableLoading && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {people.length > 0 && (\n            <PeopleTable people={people} selectedPersonSlug={slug} />\n          )}\n        </div>\n      </div>\n    </>\n  );\n});\n","import {\n  Navigate,\n  NavLink,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport cn from 'classnames';\n\nimport './App.scss';\nimport { HomePage } from './components/HomePage/HomePage';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink\n              className={({ isActive }) => (\n                cn('navbar-item', {\n                  'has-background-grey-lighter is-active': isActive,\n                })\n              )}\n              to=\"/\"\n            >\n              Home\n            </NavLink>\n\n            <NavLink\n              className={({ isActive }) => (\n                cn('navbar-item', { 'has-background-grey-lighter': isActive })\n              )}\n              to=\"people\"\n            >\n              People\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route\n              path=\"/\"\n              element={(\n                <HomePage />\n              )}\n            />\n            <Route\n              path=\"home\"\n              element={<Navigate to=\"/\" replace />}\n            />\n            <Route path=\"people\">\n              <Route index element={<PeoplePage />} />\n              <Route path=\":slug\" element={<PeoplePage />} />\n            </Route>\n            <Route\n              path=\"*\"\n              element={\n                <h1 className=\"title\">Page not found</h1>\n              }\n            />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}